[{"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\index.js":"1","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\App.js":"2","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\layout\\Navbar.jsx":"3","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\pages\\Home.jsx":"4","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\pages\\About.jsx":"5","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Contacts\\ContactState.js":"6","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Contacts\\ContactContext.js":"7","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\types.js":"8","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Contacts\\ContactReducer.js":"9","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\Contact.jsx":"10","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\ContactItem.jsx":"11","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\ContactForm.jsx":"12","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\ContactFilter.jsx":"13","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Auth\\AuthState.js":"14","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Auth\\AuthContext.js":"15","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Auth\\AuthReducer.js":"16","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Auth\\Register.jsx":"17","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Auth\\Login.jsx":"18","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Alert\\AlertState.js":"19","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Alert\\AlertReducer.js":"20","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Alert\\AlertContext.js":"21","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\layout\\Alert.jsx":"22","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\utils\\setAuthToken.js":"23","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Route\\PrivateRoute.jsx":"24","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\SpinnerComponent.jsx":"25","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\pages\\MainHome.jsx":"26"},{"size":198,"mtime":1609054915078,"results":"27","hashOfConfig":"28"},{"size":1636,"mtime":1609240529084,"results":"29","hashOfConfig":"28"},{"size":2276,"mtime":1609251713864,"results":"30","hashOfConfig":"28"},{"size":1018,"mtime":1609250428209,"results":"31","hashOfConfig":"28"},{"size":1070,"mtime":1609310090522,"results":"32","hashOfConfig":"28"},{"size":3453,"mtime":1609238120138,"results":"33","hashOfConfig":"28"},{"size":114,"mtime":1609059867839,"results":"34","hashOfConfig":"28"},{"size":918,"mtime":1609228869638,"results":"35","hashOfConfig":"28"},{"size":2204,"mtime":1609238494337,"results":"36","hashOfConfig":"28"},{"size":1368,"mtime":1609251521984,"results":"37","hashOfConfig":"28"},{"size":2248,"mtime":1609233405310,"results":"38","hashOfConfig":"28"},{"size":4159,"mtime":1609249736227,"results":"39","hashOfConfig":"28"},{"size":862,"mtime":1609137663146,"results":"40","hashOfConfig":"28"},{"size":2747,"mtime":1609225709967,"results":"41","hashOfConfig":"28"},{"size":109,"mtime":1609141455100,"results":"42","hashOfConfig":"28"},{"size":1325,"mtime":1609225574824,"results":"43","hashOfConfig":"28"},{"size":2869,"mtime":1609251477596,"results":"44","hashOfConfig":"28"},{"size":2895,"mtime":1609251498973,"results":"45","hashOfConfig":"28"},{"size":852,"mtime":1609152386264,"results":"46","hashOfConfig":"28"},{"size":347,"mtime":1609149934052,"results":"47","hashOfConfig":"28"},{"size":110,"mtime":1609147829872,"results":"48","hashOfConfig":"28"},{"size":728,"mtime":1609151476411,"results":"49","hashOfConfig":"28"},{"size":253,"mtime":1609161288916,"results":"50","hashOfConfig":"28"},{"size":542,"mtime":1609225772763,"results":"51","hashOfConfig":"28"},{"size":261,"mtime":1609230274977,"results":"52","hashOfConfig":"28"},{"size":1184,"mtime":1609308204404,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1485guc",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\index.js",[],["117","118"],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\App.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\layout\\Navbar.jsx",["119"],"import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AuthContext from \"../../Context/Auth/AuthContext\";\r\nimport ContactContext from \"../../Context/Contacts/ContactContext\";\r\n\r\nconst Navbar = () => {\r\n    const authContext = useContext(AuthContext);\r\n    const { isAuthenticated, logOut, user } = authContext;\r\n    const contactContext = useContext(ContactContext);\r\n    const { clearContacts } = contactContext;\r\n\r\n    const onLogOUT = () => {\r\n        console.log(\"logout\");\r\n        logOut();\r\n        clearContacts();\r\n    };\r\n\r\n    const authUser = (\r\n        <>\r\n            <li className=\"nav-item nav-link\">\r\n                Hello , {user && <span className=\"text-light\">{user.name}</span>}\r\n            </li>\r\n            <li className=\"nav-item pl-md-5 nav-link rightbutton\">\r\n                <a onClick={onLogOUT} href=\"#\" style={{marginLeft:'-40px'}}> \r\n                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                    <span>Log-Out</span>\r\n                </a>\r\n            </li>\r\n        </>\r\n    );\r\n    const guestUser = (\r\n        <>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/register\" className=\"nav-link\">\r\n                    Register\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/login\" className=\"nav-link rightbutton\">\r\n                    Log-In\r\n                </Link>\r\n            </li>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark \">\r\n            <div class=\"container-fluid\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    Contact-Keeper\r\n        </Link>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className='nav-item'>\r\n                        <Link to='/' className='nav-link active' style={{margin:\"0px 10px\"}}>Home</Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/about' className='nav-link'style={{margin:\"0px 10px\"}} >About</Link>\r\n                    </li>\r\n                    {isAuthenticated ? authUser : guestUser}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default Navbar;\r\n","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\pages\\Home.jsx",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\pages\\About.jsx",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Contacts\\ContactState.js",["120","121"],"import { React, useReducer } from \"react\";\r\nimport axois from 'axios';\r\n\r\nimport ContactContext from \"./ContactContext\";\r\nimport ContactReducer from \"./ContactReducer\";\r\nimport {\r\n    GET_CONTACT,\r\n    CLEAR_CONTACTS,\r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_CURRENT,\r\n    SET_CURRENT,\r\n    CLEAR_FILTER,\r\n    CONTACT_ERROR,\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nconst ContactState = (props) => {\r\n    const initialState = {\r\n        contacts: null,\r\n        current: null,\r\n        filtered: null,\r\n        error: null,\r\n        loading: true,\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\r\n    // Actions\r\n\r\n    // get all COntacts\r\n    const getContact = async () => {\r\n        try {\r\n            const res = await axios.get('/api/contacts/');\r\n            dispatch({ type: GET_CONTACT, payload: res.data });\r\n        } catch (err) {\r\n            dispatch({ type: CONTACT_ERROR, payload: err.response.msg })\r\n        }\r\n    }\r\n\r\n    // clear Contact\r\n    const clearContacts = () => { dispatch({ type: CLEAR_CONTACTS }); }\r\n\r\n    //Add Contact\r\n    const addContact = async contact => {\r\n        const config = {\r\n            header: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/contacts/', contact, config);\r\n            dispatch({ type: ADD_CONTACT, payload: res.data });\r\n        } catch (err) {\r\n            dispatch({ type: CONTACT_ERROR, payload: err.response.msg })\r\n        }\r\n\r\n    }\r\n    // Delete Contact\r\n    const deleteContact = async id => {\r\n        try {\r\n            await axios.delete(`/api/contacts/${id}`)\r\n            dispatch({ type: DELETE_CONTACT, payload: id });\r\n        } catch (err) {\r\n            dispatch({ type: CONTACT_ERROR, payload: err.response.msg })\r\n        }\r\n        \r\n    }\r\n\r\n    // Set Current Contact\r\n    const setContact = contact => {\r\n        dispatch({ type: SET_CURRENT, payload: contact });\r\n    }\r\n    // Clear Current Contact\r\n    const clearContact = () => {\r\n        dispatch({ type: CLEAR_CURRENT });\r\n    }\r\n    //Update Contact\r\n    const updateContact = async contact => {\r\n        const config = {\r\n            header: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.put(`/api/contacts/${contact._id}`, contact, config);\r\n            dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n        } catch (err) {\r\n            dispatch({ type: CONTACT_ERROR, payload: err.response.msg })\r\n        }\r\n    }\r\n    //Filter Contact\r\n    const filterContact = text => {\r\n        dispatch({ type: FILTER_CONTACTS, payload: text });\r\n    }\r\n\r\n    // Clear Filter\r\n    const clearFilter = () => {\r\n        dispatch({ type: CLEAR_FILTER })\r\n    }\r\n    return (\r\n        <ContactContext.Provider value={{\r\n            contacts: state.contacts,\r\n            current: state.current,\r\n            filtered: state.filtered,\r\n            error: state.error,\r\n            getContact,\r\n            clearContacts,\r\n            addContact,\r\n            deleteContact,\r\n            setContact,\r\n            clearContact,\r\n            updateContact,\r\n            filterContact,\r\n            clearFilter\r\n        }}>\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    )\r\n};\r\n\r\nexport default ContactState;\r\n","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Contacts\\ContactContext.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\types.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Contacts\\ContactReducer.js",["122"],"import { \r\n    GET_CONTACT,\r\n    CLEAR_CONTACTS,\r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_CURRENT,\r\n    CLEAR_FILTER,\r\n    CONTACT_ERROR,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_CONTACT : \r\n            return {\r\n                ...state,\r\n                contacts : action.payload,\r\n                loading : false,\r\n            }\r\n        case CLEAR_CONTACTS : \r\n            return {\r\n                ...state,\r\n                contacts : null,\r\n                loading : true,\r\n                error : null\r\n            }\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state , contacts : [ action.payload , ...state.contacts  ] , loading : false,\r\n            }\r\n        case CONTACT_ERROR:\r\n            return {\r\n                ...state,\r\n                error : action.payload\r\n            }\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state , \r\n                contacts : state.contacts.filter( contact => { return contact._id !== action.payload} ) ,\r\n                loading : false,\r\n            }\r\n        case SET_CURRENT :\r\n            return {\r\n                ...state , current : action.payload\r\n            }\r\n        case CLEAR_CURRENT : \r\n            return {\r\n                ...state , current : null\r\n            }\r\n        case UPDATE_CONTACT :\r\n            return {\r\n                ...state , \r\n                contacts : state.contacts.map(contact => {return (contact._id === action.payload._id) ? action.payload : contact}),\r\n                loading : false,\r\n            }\r\n        case FILTER_CONTACTS :\r\n            return {\r\n                ...state,\r\n                filtered : state.contacts.filter( contact => {\r\n                    const regex = new RegExp(`${action.payload}` , 'gi')\r\n                    return contact.name.match(regex) || contact.email.match(regex)\r\n                })\r\n            }\r\n        case CLEAR_FILTER : \r\n            return {\r\n                ...state,\r\n                filtered : null\r\n            } \r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\Contact.jsx",["123"],"import React, { useContext , useEffect } from 'react'\r\nimport ContactContext from '../../Context/Contacts/ContactContext'\r\nimport ContactItem from './ContactItem'\r\nimport SpinnerComponent from './SpinnerComponent';\r\n\r\n\r\n//Transition\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n\r\n\r\nconst Contact = () => {\r\n    const contactContext = useContext(ContactContext);\r\n    const { contacts, filtered ,getContact , loading} = contactContext;\r\n\r\n    useEffect(() => {\r\n        getContact();\r\n    }, [])\r\n\r\n    if (contacts !== null && contacts.length === 0) {\r\n        return <h4 className='text-center text-light'>Please Add a Contact</h4>\r\n    }\r\n    return (\r\n\r\n        contacts !== null && !loading ? (<TransitionGroup> {filtered !== null ?\r\n            filtered.map((contact) => {\r\n                return <CSSTransition key={contact._id} timeout={500} classNames=\"alert\" >\r\n                            <ContactItem  contact={contact} />\r\n                        </CSSTransition>\r\n            }) : contacts.map((contact) => {\r\n                return <CSSTransition key={contact._id} timeout={500} classNames=\"alert\" >\r\n                            <ContactItem  contact={contact} />\r\n                        </CSSTransition>\r\n            })}\r\n        </TransitionGroup>) : < SpinnerComponent />\r\n        \r\n    )\r\n}\r\n\r\nexport default Contact;","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\ContactItem.jsx",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\ContactForm.jsx",["124","125","126"],"import React, { useState, useContext ,useEffect} from 'react'\r\nimport ContactContext from '../../Context/Contacts/ContactContext'\r\nimport AlertContext from '../../Context/Alert/AlertContext'\r\n\r\nconst ContactForm = () => {\r\n\r\n    const contactContext = useContext(ContactContext);\r\n    const alertContext = useContext(AlertContext);\r\n    const {addContact , current ,updateContact ,clearContact , error} = contactContext;\r\n\r\n    const [contact, setContact] = useState({\r\n        _id : null,\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        type: 'personal'\r\n    })\r\n    const { name, email, phone, type , _id} = contact;\r\n\r\n    const onChange = e => setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if(current === null){\r\n            if(name === '' || phone === '' || email === ''){\r\n                alertContext.setAlert('please Fill The Form','danger');\r\n            }else{\r\n                addContact(contact);\r\n            }\r\n        }else{\r\n            updateContact(contact);\r\n        }\r\n        setContact({\r\n            _id : null,\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            type: 'personal'\r\n        })\r\n        clearAll();\r\n    }\r\n\r\n    const clearAll = () => {\r\n        clearContact();\r\n    }\r\n\r\n    // for updating purpose as we know if we click on Edit Button Cuurent is filled wiht that contact value so we use that thing\r\n    useEffect(() => {\r\n        if(current !== null){\r\n            setContact({...current});\r\n        }else{\r\n            setContact({\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                type: 'personal'\r\n            })\r\n        }\r\n    }, [ContactContext , current])\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div className={'text-center '+ (current == null ? 'bg-primary ' : 'bg-success ') +'text-light'} style={{height:\"120px\"}}>\r\n                <h1 className='contactFormheading'> {current == null ?<i class='fas fa-user-plus m-2'></i> : <i class=\"fas fa-user-edit m-2\"></i> }{current == null ? \"Add Contact\" : \"Edit Contact\"}</h1>\r\n            </div>\r\n            <div className=\"customformContainer\">\r\n                <div>\r\n                    <label className='form-label m-3'>Name</label>\r\n                    <input type=\"text\" className='form-control' name='name' value={name} onChange={onChange} />\r\n                </div>\r\n                <div>\r\n                    <label className='form-label m-3'>Email</label>\r\n                    <input type=\"text\" className='form-control' name='email' value={email} onChange={onChange} />\r\n                </div>\r\n                <div>\r\n                    <label className='form-label m-3'>Phone Number</label>\r\n                    <input type=\"text\" className='form-control' name='phone' value={phone} onChange={onChange} />\r\n                </div>\r\n                <div >\r\n                    <label className='form-label m-3'>Contact Type</label>\r\n                    <div className='d-flex justify-content-around'>\r\n                        <div >\r\n                            <label className='form-check-label m-lg-2'>Personal</label>\r\n                            <input type=\"radio\" checked={type === 'personal'} name='type' value='personal' onChange={onChange} />\r\n                        </div>\r\n                        <div>\r\n                            <label className='form-check-label m-lg-2'>Professional</label>\r\n                            <input type=\"radio\" checked={type === 'professional'} name='type' value='professional' onChange={onChange} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className={'btn '+ (current == null ? 'btn-primary ' : 'btn-success ') +'w-100 m-lg-3'}> \r\n                    {current == null ? \"Submit\" : 'Update'} \r\n                </button>\r\n                \r\n                {current && <button className='btn btn-light w-100' onClick={clearAll}> Clear </button>}\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ContactForm;","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\ContactFilter.jsx",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Auth\\AuthState.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Auth\\AuthContext.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Auth\\AuthReducer.js",["127"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_ERROR\r\n} from '../types'\r\n\r\nexport default (state , action ) => {\r\n    switch (action.type) {\r\n        case USER_LOADED :\r\n            return {\r\n                ...state,\r\n                isAuthenticated : true,\r\n                loading : false,\r\n                user : action.payload\r\n            }\r\n        case REGISTER_SUCCESS :\r\n        case LOGIN_SUCCESS :\r\n            localStorage.setItem('token' , action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated : true,\r\n                loading : false,\r\n            }\r\n        case REGISTER_FAIL :\r\n        case AUTH_ERROR : \r\n        case LOGIN_FAIL :\r\n        case LOGOUT :\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token : null,\r\n                isAuthenticated : false,\r\n                loading : false,\r\n                user : null,\r\n                error : action.payload\r\n            }\r\n        case CLEAR_ERROR :\r\n            return {\r\n                ...state,\r\n                error : null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Auth\\Register.jsx",["128"],"import React,{useState , useContext , useEffect} from 'react'\r\nimport AlertContext from '../../Context/Alert/AlertContext';\r\nimport AuthContext from '../../Context/Auth/AuthContext';\r\n\r\nconst Register = (props) => {\r\n\r\n    const alertContext  = useContext(AlertContext); \r\n    const { setAlert } = alertContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const { register , error ,clearError , isAuthenticated} = authContext;\r\n\r\n    const [user, setUser] = useState({\r\n        name : '',\r\n        email : '',\r\n        password : '',\r\n        password2 : '',\r\n    })\r\n    const {name ,email ,password ,password2} = user;\r\n\r\n    const onchange = e => setUser({...user , [e.target.name] : e.target.value})\r\n\r\n    const onsubmit = e => {\r\n        e.preventDefault();\r\n        if( name=== '' || email === '' || password === '' || password2 === ''){\r\n            setAlert('Please Fill All the Details' , 'danger')\r\n        }else if(password !== password2){\r\n            setAlert('Password Not Match !' , 'primary');\r\n        }else{\r\n            register({\r\n                name,\r\n                email,\r\n                password\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated){\r\n            props.history.push('/');\r\n        }\r\n        if(error === 'User already Exists'){\r\n            setAlert(error,'danger');\r\n        }\r\n        clearError();\r\n    }, [error , isAuthenticated , props.history])\r\n\r\n    return ( \r\n        <div className='container register' style={{width:'40%' , marginTop:'10vh'}}>\r\n            <h1 className='text-center'>Account <span style={{color:\"#f9a323\"}}>Register</span></h1>\r\n            <form onSubmit={onsubmit}>\r\n                <div className='m-lg-3'>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input className='form-control' type=\"text\" name='name' value={name} onChange={onchange}/>\r\n                </div>\r\n                <div className='m-lg-3'>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input className='form-control' type=\"email\" name='email' value={email} onChange={onchange}/>\r\n                </div>\r\n                <div className='m-lg-3'>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input className='form-control' type=\"password\" name='password' value={password} onChange={onchange} minLength='6'/>\r\n                </div>\r\n                <div className='m-lg-3'>\r\n                    <label htmlFor=\"password\">Confirm Password</label>\r\n                    <input className='form-control' type=\"password\" name='password2' value={password2} onChange={onchange} minLength='6'/>\r\n                </div>\r\n                <button className='btn btn-primary w-100 m-lg-1'>Register</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Auth\\Login.jsx",["129","130","131"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertContext from \"../../Context/Alert/AlertContext\";\r\nimport AuthContext from \"../../Context/Auth/AuthContext\";\r\n\r\nconst LogIn = (props) => {\r\n    const alertContext = useContext(AlertContext);\r\n    const { setAlert } = alertContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {\r\n        register,\r\n        error,\r\n        clearError,\r\n        isAuthenticated,\r\n        loginUser,\r\n    } = authContext;\r\n\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n    const { email, password } = user;\r\n\r\n    const onchange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n    const onsubmit = (e) => {\r\n        e.preventDefault();\r\n        if (email === \"\" || password === \"\") {\r\n            setAlert(\"Please Fill The Form\", \"danger\");\r\n        } else {\r\n            loginUser({\r\n                email,\r\n                password,\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            props.history.push(\"/\");\r\n        }\r\n        if (error == \"Invalid Credentials\") {\r\n            setAlert(error, \"danger\");\r\n            clearError();\r\n        }\r\n    }, [error, isAuthenticated, props.history]);\r\n\r\n    return (\r\n        <div\r\n            className=\"container register\"\r\n            style={{ width: \"40%\", marginTop: \"10vh\" }}\r\n        >\r\n            <h1 className=\"text-center\">\r\n                Account <span style={{ color: \"#f9a323\" }}>Log-In</span>\r\n            </h1>\r\n            <form onSubmit={onsubmit}>\r\n                <div className=\"m-lg-3\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={onchange}\r\n                    />\r\n                </div>\r\n                <div className=\"m-lg-3\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={onchange}\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-primary w-100 m-lg-1\">Log-In</button>\r\n                <Link to=\"/register\">\r\n                    <button\r\n                        className=\"btn btn-light w-100 m-lg-1\"\r\n                        style={{ color: \"#f9a323\" }}\r\n                    >\r\n                        Create a Account ?\r\n          </button>\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogIn;\r\n","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Alert\\AlertState.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Alert\\AlertReducer.js",["132"],"import { SET_ALERT , REMOVE_ALERT} from '../types';\r\n\r\nexport default (state,action) => {\r\n    switch (action.type) {\r\n        case SET_ALERT :\r\n            return [ ...state , action.payload]\r\n        case REMOVE_ALERT :\r\n            return state.filter( alert => alert.id !== action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Alert\\AlertContext.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\layout\\Alert.jsx",["133"],"import React, { useContext } from \"react\";\r\nimport AlertContext from \"../../Context/Alert/AlertContext\";\r\n\r\nconst Alert = () => {\r\n    const alertContext = useContext(AlertContext);\r\n    const { alerts } = alertContext;\r\n    return (\r\n        // <div className='alert alert-primary' role=\"alert\">\r\n        //     alert\r\n        // </div>\r\n        alerts.length > 0 &&\r\n        alerts.map((alert) => {\r\n            return  <div key={alert.id} className={`alert alert-${alert.type}`} role=\"alert\">\r\n                        {alert.type == 'success' ? <i class=\"fas fa-check-square m-2\"></i> : <i class=\"fas fa-exclamation-triangle m-2\"></i>}{alert.msg}\r\n                    </div>\r\n        })\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Route\\PrivateRoute.jsx",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\SpinnerComponent.jsx",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\pages\\MainHome.jsx",["134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":25,"column":17,"nodeType":"141","endLine":25,"endColumn":77},{"ruleId":"142","severity":1,"message":"143","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":13},{"ruleId":"142","severity":1,"message":"146","line":88,"column":19,"nodeType":"144","messageId":"145","endLine":88,"endColumn":22},{"ruleId":"147","severity":1,"message":"148","line":14,"column":1,"nodeType":"149","endLine":74,"endColumn":2},{"ruleId":"150","severity":1,"message":"151","line":18,"column":8,"nodeType":"152","endLine":18,"endColumn":10,"suggestions":"153"},{"ruleId":"142","severity":1,"message":"154","line":9,"column":64,"nodeType":"144","messageId":"145","endLine":9,"endColumn":69},{"ruleId":"142","severity":1,"message":"155","line":18,"column":40,"nodeType":"144","messageId":"145","endLine":18,"endColumn":43},{"ruleId":"150","severity":1,"message":"156","line":59,"column":8,"nodeType":"152","endLine":59,"endColumn":34,"suggestions":"157"},{"ruleId":"147","severity":1,"message":"148","line":12,"column":1,"nodeType":"149","endLine":51,"endColumn":2},{"ruleId":"150","severity":1,"message":"158","line":46,"column":8,"nodeType":"152","endLine":46,"endColumn":49,"suggestions":"159"},{"ruleId":"142","severity":1,"message":"160","line":12,"column":9,"nodeType":"144","messageId":"145","endLine":12,"endColumn":17},{"ruleId":"161","severity":1,"message":"162","line":43,"column":19,"nodeType":"163","messageId":"164","endLine":43,"endColumn":21},{"ruleId":"150","severity":1,"message":"158","line":47,"column":8,"nodeType":"152","endLine":47,"endColumn":47,"suggestions":"165"},{"ruleId":"147","severity":1,"message":"148","line":3,"column":1,"nodeType":"149","endLine":12,"endColumn":2},{"ruleId":"161","severity":1,"message":"162","line":14,"column":37,"nodeType":"163","messageId":"164","endLine":14,"endColumn":39},{"ruleId":"166","severity":1,"message":"167","line":20,"column":21,"nodeType":"141","endLine":20,"endColumn":90},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'axois' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContact'. Either include it or remove the dependency array.","ArrayExpression",["170"],"'error' is assigned a value but never used.","'_id' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'ContactContext'. Either exclude it or remove the dependency array. Outer scope values like 'ContactContext' aren't valid dependencies because mutating them doesn't re-render the component.",["171"],"React Hook useEffect has missing dependencies: 'clearError' and 'setAlert'. Either include them or remove the dependency array.",["172"],"'register' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["173"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"178","fix":"180"},"Update the dependencies array to be: [getContact]",{"range":"181","text":"182"},"Update the dependencies array to be: [current]",{"range":"183","text":"184"},"Update the dependencies array to be: [clearError, error, isAuthenticated, props.history, setAlert]",{"range":"185","text":"186"},{"range":"187","text":"186"},[523,525],"[getContact]",[1763,1789],"[current]",[1402,1443],"[clearError, error, isAuthenticated, props.history, setAlert]",[1293,1332]]