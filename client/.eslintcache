[{"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\index.js":"1","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\App.js":"2","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\layout\\Navbar.jsx":"3","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\pages\\Home.jsx":"4","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\pages\\About.jsx":"5","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Contacts\\ContactState.js":"6","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Contacts\\ContactContext.js":"7","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\types.js":"8","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Contacts\\ContactReducer.js":"9","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\Contact.jsx":"10","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\ContactItem.jsx":"11","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\ContactForm.jsx":"12","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\ContactFilter.jsx":"13","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Auth\\AuthState.js":"14","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Auth\\AuthContext.js":"15","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Auth\\AuthReducer.js":"16","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Auth\\Register.jsx":"17","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Auth\\Login.jsx":"18","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Alert\\AlertState.js":"19","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Alert\\AlertReducer.js":"20","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Alert\\AlertContext.js":"21","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\layout\\Alert.jsx":"22","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\utils\\setAuthToken.js":"23"},{"size":198,"mtime":1609054915078,"results":"24","hashOfConfig":"25"},{"size":1442,"mtime":1609161194333,"results":"26","hashOfConfig":"25"},{"size":993,"mtime":1609145081238,"results":"27","hashOfConfig":"25"},{"size":908,"mtime":1609161877717,"results":"28","hashOfConfig":"25"},{"size":126,"mtime":1609057248655,"results":"29","hashOfConfig":"25"},{"size":2615,"mtime":1609136412517,"results":"30","hashOfConfig":"25"},{"size":114,"mtime":1609059867839,"results":"31","hashOfConfig":"25"},{"size":780,"mtime":1609142673198,"results":"32","hashOfConfig":"25"},{"size":1517,"mtime":1609136373397,"results":"33","hashOfConfig":"25"},{"size":1116,"mtime":1609140154910,"results":"34","hashOfConfig":"25"},{"size":2246,"mtime":1609079080841,"results":"35","hashOfConfig":"25"},{"size":3820,"mtime":1609080373568,"results":"36","hashOfConfig":"25"},{"size":862,"mtime":1609137663146,"results":"37","hashOfConfig":"25"},{"size":2133,"mtime":1609161695269,"results":"38","hashOfConfig":"25"},{"size":109,"mtime":1609141455100,"results":"39","hashOfConfig":"25"},{"size":1244,"mtime":1609162038656,"results":"40","hashOfConfig":"25"},{"size":2859,"mtime":1609160852696,"results":"41","hashOfConfig":"25"},{"size":1315,"mtime":1609145061123,"results":"42","hashOfConfig":"25"},{"size":852,"mtime":1609152386264,"results":"43","hashOfConfig":"25"},{"size":347,"mtime":1609149934052,"results":"44","hashOfConfig":"25"},{"size":110,"mtime":1609147829872,"results":"45","hashOfConfig":"25"},{"size":728,"mtime":1609151476411,"results":"46","hashOfConfig":"25"},{"size":253,"mtime":1609161288916,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1485guc",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\index.js",[],["102","103"],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\App.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\layout\\Navbar.jsx",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\pages\\Home.jsx",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\pages\\About.jsx",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Contacts\\ContactState.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Contacts\\ContactContext.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\types.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Contacts\\ContactReducer.js",["104"],"import { \r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_CURRENT,\r\n    CLEAR_FILTER,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state , contacts : [...state.contacts , action.payload ]\r\n            }\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state , contacts : state.contacts.filter( contact => { return contact.id !== action.payload} )\r\n            }\r\n        case SET_CURRENT :\r\n            return {\r\n                ...state , current : action.payload\r\n            }\r\n        case CLEAR_CURRENT : \r\n            return {\r\n                ...state , current : null\r\n            }\r\n        case UPDATE_CONTACT :\r\n            return {\r\n                ...state , contacts : state.contacts.map(contact => {return (contact.id === action.payload.id) ? action.payload : contact})\r\n            }\r\n        case FILTER_CONTACTS :\r\n            return {\r\n                ...state,\r\n                filtered : state.contacts.filter( contact => {\r\n                    const regex = new RegExp(`${action.payload}` , 'gi')\r\n                    return contact.name.match(regex) || contact.email.match(regex)\r\n                })\r\n            }\r\n        case CLEAR_FILTER : \r\n            return {\r\n                ...state,\r\n                filtered : null\r\n            } \r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\Contact.jsx",["105"],"import React, { useContext } from 'react'\r\nimport ContactContext from '../../Context/Contacts/ContactContext'\r\nimport ContactItem from './ContactItem'\r\n\r\n//Transition\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n\r\n\r\nconst Contact = () => {\r\n    const contactContext = useContext(ContactContext);\r\n    const { contacts, filtered } = contactContext;\r\n\r\n    if (contacts.length == 0) {\r\n        return <h4 className='text-center'>Please Add a Contact</h4>\r\n    }\r\n    return (\r\n        <TransitionGroup> {filtered !== null ?\r\n            filtered.map((contact) => {\r\n                return <CSSTransition key={contact.id} timeout={500} classNames=\"alert\" >\r\n                            <ContactItem  contact={contact} />\r\n                        </CSSTransition>\r\n            }) : contacts.map((contact) => {\r\n                return <CSSTransition key={contact.id} timeout={500} classNames=\"alert\" >\r\n                            <ContactItem  contact={contact} />\r\n                        </CSSTransition>\r\n            })}\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nexport default Contact;","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\ContactItem.jsx",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\ContactForm.jsx",["106"],"import React, { useState, useContext ,useEffect} from 'react'\r\nimport ContactContext from '../../Context/Contacts/ContactContext'\r\n\r\nconst ContactForm = () => {\r\n\r\n    const contactContext = useContext(ContactContext);\r\n    const {addContact , current ,updateContact ,clearContact} = contactContext;\r\n\r\n    const [contact, setContact] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        type: 'personal'\r\n    })\r\n    const { name, email, phone, type } = contact;\r\n\r\n    const onChange = e => setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if(current === null){\r\n            addContact(contact);\r\n        }else{\r\n            updateContact(contact);\r\n        }\r\n        setContact({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            type: 'personal'\r\n        })\r\n        clearAll();\r\n    }\r\n\r\n    const clearAll = () => {\r\n        clearContact();\r\n    }\r\n\r\n    // for updating purpose as we know if we click on Edit Button Cuurent is filled wiht that contact value so we use that thing\r\n    useEffect(() => {\r\n        if(current !== null){\r\n            setContact({...current});\r\n        }else{\r\n            setContact({\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                type: 'personal'\r\n            })\r\n        }\r\n    }, [ContactContext , current])\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div className={'text-center '+ (current == null ? 'bg-primary ' : 'bg-success ') +'text-light'} style={{height:\"120px\"}}>\r\n                <h1 className='contactFormheading'> {current == null ?<i class='fas fa-user-plus m-2'></i> : <i class=\"fas fa-user-edit m-2\"></i> }{current == null ? \"Add Contact\" : \"Edit Contact\"}</h1>\r\n            </div>\r\n            <div className=\"customformContainer\">\r\n                <div>\r\n                    <label className='form-label m-3'>Name</label>\r\n                    <input type=\"text\" className='form-control' name='name' value={name} onChange={onChange} />\r\n                </div>\r\n                <div>\r\n                    <label className='form-label m-3'>Email</label>\r\n                    <input type=\"text\" className='form-control' name='email' value={email} onChange={onChange} />\r\n                </div>\r\n                <div>\r\n                    <label className='form-label m-3'>Phone Number</label>\r\n                    <input type=\"text\" className='form-control' name='phone' value={phone} onChange={onChange} />\r\n                </div>\r\n                <div >\r\n                    <label className='form-label m-3'>Contact Type</label>\r\n                    <div className='d-flex justify-content-around'>\r\n                        <div >\r\n                            <label className='form-check-label m-lg-2'>Personal</label>\r\n                            <input type=\"radio\" checked={type === 'personal'} name='type' value='personal' onChange={onChange} />\r\n                        </div>\r\n                        <div>\r\n                            <label className='form-check-label m-lg-2'>Professional</label>\r\n                            <input type=\"radio\" checked={type === 'professional'} name='type' value='professional' onChange={onChange} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className={'btn '+ (current == null ? 'btn-primary ' : 'btn-success ') +'w-100 m-lg-3'}> \r\n                    {current == null ? \"Submit\" : 'Update'} \r\n                </button>\r\n                \r\n                {current && <button className='btn btn-light w-100 m-lg-3' onClick={clearAll}> Clear </button>}\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ContactForm;","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Contact\\ContactFilter.jsx",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Auth\\AuthState.js",["107","108","109"],"import React, { useReducer } from 'react'\r\nimport axios from 'axios';\r\nimport AuthContext from './AuthContext';\r\nimport AuthReducer from './AuthReducer'\r\n\r\nimport setAuthToken from '../../utils/setAuthToken'\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_ERROR\r\n} from '../types'\r\n\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        isAuthenticated: false,\r\n        loading: true,\r\n        user: null,\r\n        error: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, initialState)\r\n\r\n    // Actions\r\n    // load User\r\n    const loadUser = async () => {\r\n        //global variable\r\n        if(localStorage.token){\r\n            setAuthToken(localStorage.token);\r\n        }\r\n        try {\r\n            const res = await axios.get('/api/auth');\r\n            dispatch({ type: USER_LOADED, payload: res.data });\r\n        } catch (err) {\r\n            dispatch({type : AUTH_ERROR ,payload : err.data})\r\n        }\r\n    }\r\n\r\n    //register\r\n    const register = async formDate => {\r\n        const config = {\r\n            header: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/user/', formDate, config);\r\n            console.log(res);\r\n            dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n            loadUser();\r\n        } catch (error) {\r\n            dispatch({ type: REGISTER_FAIL, payload: error.response.data.msg })\r\n        }\r\n    }\r\n\r\n\r\n    //clearError\r\n    const clearError = () => dispatch({ type: CLEAR_ERROR })\r\n\r\n\r\n\r\n    return <AuthContext.Provider\r\n        value={{\r\n            token: state.token,\r\n            isAuthenticated: state.isAuthenticated,\r\n            loading: state.loading,\r\n            user: state.user,\r\n            error: state.error,\r\n            register,\r\n            clearError,\r\n            loadUser,\r\n        }}\r\n    >\r\n        {props.children}\r\n    </AuthContext.Provider>\r\n}\r\n\r\nexport default AuthState;","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Auth\\AuthContext.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Auth\\AuthReducer.js",["110","111","112","113"],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Auth\\Register.jsx",["114","115"],"import React,{useState , useContext , useEffect} from 'react'\r\nimport AlertContext from '../../Context/Alert/AlertContext';\r\nimport AuthContext from '../../Context/Auth/AuthContext';\r\n\r\nconst Register = () => {\r\n\r\n    const alertContext  = useContext(AlertContext); \r\n    const { setAlert } = alertContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const { register , error ,clearError , isAuthenticated} = authContext;\r\n\r\n    const [user, setUser] = useState({\r\n        name : '',\r\n        email : '',\r\n        password : '',\r\n        password2 : '',\r\n    })\r\n    const {name ,email ,password ,password2} = user;\r\n\r\n    const onchange = e => setUser({...user , [e.target.name] : e.target.value})\r\n\r\n    const onsubmit = e => {\r\n        e.preventDefault();\r\n        if( name=== '' || email === '' || password === '' || password2 === ''){\r\n            setAlert('Please Fill All the Details' , 'danger')\r\n        }else if(password !== password2){\r\n            setAlert('Password Not Match !' , 'primary');\r\n        }else{\r\n            register({\r\n                name,\r\n                email,\r\n                password\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if()\r\n        if(error === 'User already Exists'){\r\n            setAlert(error,'danger');\r\n        }\r\n        clearError();\r\n    }, [error])\r\n\r\n    return ( \r\n        <div className='container' style={{width:'40%' , marginTop:'10vh'}}>\r\n            <h1 className='text-center'>Account <span className='text-primary'>Register</span></h1>\r\n            <form onSubmit={onsubmit}>\r\n                <div className='m-lg-3'>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input className='form-control' type=\"text\" name='name' value={name} onChange={onchange}/>\r\n                </div>\r\n                <div className='m-lg-3'>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input className='form-control' type=\"email\" name='email' value={email} onChange={onchange}/>\r\n                </div>\r\n                <div className='m-lg-3'>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input className='form-control' type=\"password\" name='password' value={password} onChange={onchange} minLength='6'/>\r\n                </div>\r\n                <div className='m-lg-3'>\r\n                    <label htmlFor=\"password\">Confirm Password</label>\r\n                    <input className='form-control' type=\"password\" name='password2' value={password2} onChange={onchange} minLength='6'/>\r\n                </div>\r\n                <button className='btn btn-primary w-100 m-lg-1'>Register</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\Auth\\Login.jsx",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Alert\\AlertState.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Alert\\AlertReducer.js",["116"],"import { SET_ALERT , REMOVE_ALERT} from '../types';\r\n\r\nexport default (state,action) => {\r\n    switch (action.type) {\r\n        case SET_ALERT :\r\n            return [ ...state , action.payload]\r\n        case REMOVE_ALERT :\r\n            return state.filter( alert => alert.id !== action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\Context\\Alert\\AlertContext.js",[],"C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\components\\layout\\Alert.jsx",["117"],"import React, { useContext } from \"react\";\r\nimport AlertContext from \"../../Context/Alert/AlertContext\";\r\n\r\nconst Alert = () => {\r\n    const alertContext = useContext(AlertContext);\r\n    const { alerts } = alertContext;\r\n    return (\r\n        // <div className='alert alert-primary' role=\"alert\">\r\n        //     alert\r\n        // </div>\r\n        alerts.length > 0 &&\r\n        alerts.map((alert) => {\r\n            return  <div key={alert.id} className={`alert alert-${alert.type}`} role=\"alert\">\r\n                        {alert.type == 'success' ? <i class=\"fas fa-check-square m-2\"></i> : <i class=\"fas fa-exclamation-triangle m-2\"></i>}{alert.msg}\r\n                    </div>\r\n        })\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","C:\\Users\\Pradeep Singh\\Desktop\\React3Project\\ContactKeeper\\client\\src\\utils\\setAuthToken.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":11,"column":1,"nodeType":"124","endLine":49,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":14,"column":25,"nodeType":"127","messageId":"128","endLine":14,"endColumn":27},{"ruleId":"129","severity":1,"message":"130","line":51,"column":8,"nodeType":"131","endLine":51,"endColumn":34,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":12,"column":5,"nodeType":"135","messageId":"136","endLine":12,"endColumn":18},{"ruleId":"133","severity":1,"message":"137","line":13,"column":5,"nodeType":"135","messageId":"136","endLine":13,"endColumn":15},{"ruleId":"133","severity":1,"message":"138","line":14,"column":5,"nodeType":"135","messageId":"136","endLine":14,"endColumn":11},{"ruleId":"133","severity":1,"message":"134","line":6,"column":5,"nodeType":"135","messageId":"136","endLine":6,"endColumn":18},{"ruleId":"133","severity":1,"message":"137","line":7,"column":5,"nodeType":"135","messageId":"136","endLine":7,"endColumn":15},{"ruleId":"133","severity":1,"message":"138","line":8,"column":5,"nodeType":"135","messageId":"136","endLine":8,"endColumn":11},{"ruleId":"122","severity":1,"message":"123","line":12,"column":1,"nodeType":"124","endLine":48,"endColumn":2},{"ruleId":"133","severity":1,"message":"139","line":11,"column":44,"nodeType":"135","messageId":"136","endLine":11,"endColumn":59},{"ruleId":"129","severity":1,"message":"140","line":43,"column":8,"nodeType":"131","endLine":43,"endColumn":15,"suggestions":"141"},{"ruleId":"122","severity":1,"message":"123","line":3,"column":1,"nodeType":"124","endLine":12,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":14,"column":37,"nodeType":"127","messageId":"128","endLine":14,"endColumn":39},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'ContactContext'. Either exclude it or remove the dependency array. Outer scope values like 'ContactContext' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["144"],"no-unused-vars","'LOGIN_SUCCESS' is defined but never used.","Identifier","unusedVar","'LOGIN_FAIL' is defined but never used.","'LOGOUT' is defined but never used.","'isAuthenticated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clearError' and 'setAlert'. Either include them or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [current]",{"range":"150","text":"151"},"Update the dependencies array to be: [clearError, error, setAlert]",{"range":"152","text":"153"},[1417,1443],"[current]",[1318,1325],"[clearError, error, setAlert]"]